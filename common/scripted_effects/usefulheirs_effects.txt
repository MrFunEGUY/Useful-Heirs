
#################################
### Useful Heirs by MrFunEGUY ###
#################################

get_heir_setup = {
	if = {
		limit = { has_adoptive_dynasties = yes }
		if = {
			limit = {
				exists = heir
				AND = {
					has_civil_wars_mod = yes
					has_fatherland_mod = yes
				}
				heir = { has_leader_flag = appointed_heir }
			}
			set_country_flag = dissed_heir
			heir = {
				random_list = {
					70 = {
						save_event_target_as = disinherited_heir
						root = { country_event = { id = civheir.1000 } }
					}
					30 = { get_fatherland_chance = yes }
				}
			}

		}
		else_if = {
			limit = {
				has_civil_wars_mod = yes
				exists = heir
				heir = { has_leader_flag = appointed_heir }
			}
			heir = { save_event_target_as = disinherited_heir }
			country_event = { id = civheir.1000 }
			set_country_flag = dissed_heir
		}
		else_if = {
			limit = {
				has_fatherland_mod = yes
				exists = heir
				heir = { has_leader_flag = appointed_heir }
			}
			heir = { get_fatherland_chance = yes }
			set_country_flag = dissed_heir
		}
		else_if = {
			limit = { exists = heir }
			heir = {
				set_leader_flag = dead_ruler
				kill_leader = { show_notification = no }
			}
		}
		set_heir = event_target:new_chosen_heir
		event_target:new_chosen_heir = { set_leader_flag = appointed_heir }
		country_event = { id = usefulheirs.3500 }
	}
	else = {
		if = {
			limit = {
				exists = heir
				AND = {
					has_civil_wars_mod = yes
					has_fatherland_mod = yes
				}
			}
			set_country_flag = dissed_heir
			heir = {
				random_list = {
					70 = { # Civil Wars
						save_event_target_as = disinherited_heir
						root = { country_event = { id = civheir.1000 } }
					}
					30 = { # Fatherland
						get_fatherland_chance = yes
					}
				}
			}

		}
		else_if = {
			limit = {
				exists = heir
				has_civil_wars_mod = yes
			}
			heir = {
				save_event_target_as = disinherited_heir
				root = { country_event = { id = civheir.1000 } }
			}
			set_country_flag = dissed_heir
		}
		else_if = {
			limit = {
				exists = heir
				has_fatherland_mod = yes
			}
			heir = {
				get_fatherland_chance = yes
			}
			set_country_flag = dissed_heir
		}
		else_if = {
			limit = { exists = heir }
			heir = {
				set_leader_flag = dead_ruler
				kill_leader = { show_notification = no }
			}
		}
		set_heir = event_target:new_chosen_heir
		event_target:new_chosen_heir = { set_leader_flag = appointed_heir }
		# country_event = { id = usefulheirs.3400 }
	}

	event_target:new_chosen_heir = {
		if = {
			limit = { NOT = { has_trait = trait_imperial_heir } }
			add_trait = trait_imperial_heir
		}
	}
}

heir_setup_just_disinherit = {
	if = {
		limit =  { has_civil_wars_mod = yes }
		if = {
			limit = { has_adoptive_dynasties = no }
			if = {
				limit = {
					exists = heir
					AND = {
						has_civil_wars_mod = yes
						has_fatherland_mod = yes
					}
				}
				set_country_flag = dissed_heir
				random_list = {
					35 = {
						heir = {
							save_event_target_as = disinherited_heir
						}
						country_event = { id = civheir.1000 }
					}
					65 = {
						heir = {
							get_fatherland_chance = yes
						}
					}
				}
			}
			else_if = {
				limit = {
					has_civil_wars_mod = yes
					exists = heir
				}
				heir = {
					save_event_target_as = disinherited_heir
				}
				set_country_flag = dissed_heir
				country_event = { id = civheir.1000 }
			}
			else_if = {
				limit = {
					has_fatherland_mod = yes
					exists = heir
				}
				heir = {
					get_fatherland_chance = yes
				}
				set_country_flag = dissed_heir
			}
			else_if = {
				limit = { exists = heir }
				heir = {
					set_leader_flag = dead_ruler
					kill_leader = { show_notification = no }
				}
			}
		}
		else_if = {
			limit = {
				has_adoptive_dynasties = yes
				heir = { has_leader_flag = appointed_heir }
			}
			if = {
				limit = {
					exists = heir
					AND = {
						has_civil_wars_mod = yes
						has_fatherland_mod = yes
					}
					heir = { has_leader_flag = appointed_heir }
				}
				set_country_flag = dissed_heir
				random_list = {
					35 = {
						heir = { save_event_target_as = disinherited_heir }
						country_event = { id = civheir.1000 }
					}
					65 = { heir = { get_fatherland_chance = yes } }
				}
			}
			else_if = {
				limit = {
					has_civil_wars_mod = yes
					exists = heir
					heir = { has_leader_flag = appointed_heir }
				}
				heir = { save_event_target_as = disinherited_heir }
				set_country_flag = dissed_heir
				country_event = { id = civheir.1000 }
			}
			else_if = {
				limit = {
					has_fatherland_mod = yes
					exists = heir
					heir = { has_leader_flag = appointed_heir }
				}
				heir = { get_fatherland_chance = yes }
				set_country_flag = dissed_heir
			}
			else_if = {
				limit = { exists = heir }
				heir = {
					set_leader_flag = dead_ruler
					kill_leader = { show_notification = no }
				}
			}
		}
	}
	heir = { kill_leader = { show_notification = no } }
}

##############

get_leaders_in_class_heir = {
	set_variable = { which = total_class_leaders value = 0 }

	every_owned_leader = {
		limit = {
			is_heir = no
			is_ruler = no
			is_fake_leader = no
			leader_class = $CLASS$
		}
		set_leader_flag = heir_maybe
		prev = { change_variable = { which = total_class_leaders value = 1 } }
	}

	# Next, we save each subject as an Event Target
	# As the scripting language doesn't have proper loops, we use a lot of ifs if there are more than 10, the event can be run again.
	## If we do ordered_owned_leader and there are more than 10, some will be inaccessible.
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 1 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_1
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 2 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_2
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 3 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_3
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 4 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_4
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 5 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_5
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 6 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_6
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 7 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_7
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 8 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_8
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 9 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_9
		}
	}
	if = {
		limit = { check_variable = { which = total_class_leaders value >= 10 } }
		random_owned_leader = {
			limit = { has_leader_flag = heir_maybe }
			# position = 0
			# order_by = trigger:leader_age
			remove_leader_flag = heir_maybe
			save_event_target_as = leader_10
		}
	}

	country_event = { id = usefulheirs.3110 }
}

########################

remove_adoptive_dynasties = { force_remove_civic = civic_adoptive_dynasties }

########################

get_fatherland_chance = {
	species = { save_event_target_as = fatherland_species }
	save_event_target_as = disinherited_heir_fatherland
	root = {
		if = {
			limit = { has_global_flag = fatherland_rogue_distance_limited }
			if = {	# Hyperdrive I
				limit = {
					NOR = {
						has_technology = tech_hyper_drive_2
						has_technology = tech_hyper_drive_3
						has_technology = tech_jump_drive_1
						has_technology = tech_psi_jump_drive_1
					}
				}
				if = {
					limit = {
						any_system_within_border = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 10
								}
							}
						}
					}
					random_system_within_border = {
						limit = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 10
								}
							}
						}
						random_galaxy_planet = {
							limit = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 10
								}
							}
							add_modifier = { modifier = rogue_target }
							save_event_target_as = rogue_event_planet
							set_planet_flag = rogue_target
						}
					}
					country_event = { id = fatherland_rogue.100 days = 3 random = 90 }
				}
				else = { kill_fatherland_heir = yes }
			}
			if = {	# Hyperdrive II
				limit = {
					has_technology = tech_hyper_drive_2
					NOR = {
						has_technology = tech_hyper_drive_3
						has_technology = tech_jump_drive_1
						has_technology = tech_psi_jump_drive_1
					}
				}
				if = {
					limit = {
						any_system_within_border = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 20
								}
							}
						}
					}
					random_system_within_border = {
						limit = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 20
								}
							}
						}
						random_galaxy_planet = {
							limit = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 20
								}
							}
							add_modifier = { modifier = rogue_target }
							save_event_target_as = rogue_event_planet
							set_planet_flag = rogue_target
						}
					}
					country_event = { id = fatherland_rogue.100 days = 3 random = 90 }
				}
				else = { kill_fatherland_heir = yes }
			}
			if = {	# Hyperdrive III
				limit = {
					has_technology = tech_hyper_drive_3
					NOR = {
						has_technology = tech_jump_drive_1
						has_technology = tech_psi_jump_drive_1
					}
				}
				if = {
					limit = {
						any_system_within_border = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 40
								}
							}
						}
					}
					random_system_within_border = {
						limit = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 40
								}
							}
						}
						random_galaxy_planet = {
							limit = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 40
								}
							}
							add_modifier = { modifier = rogue_target }
							save_event_target_as = rogue_event_planet
							set_planet_flag = rogue_target
						}
					}
					country_event = { id = fatherland_rogue.100 days = 3 random = 90 }
				}
				else = { kill_fatherland_heir = yes }
			}
			if = {	# Jump Drive
				limit = {
					OR = {
						has_technology = tech_jump_drive_1
						has_technology = tech_psi_jump_drive_1
					}
				}
				if = {
					limit = {
						any_system_within_border = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 1000
								}
							}
						}
					}
					random_system_within_border = {
						limit = {
							closest_system = {
								limit = { NOT = { exists = space_owner } }
								use_bypasses = yes
								max_steps = 1
							}
							any_galaxy_planet = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 1000
								}
							}
						}
						random_galaxy_planet = {
							limit = {
								is_valid_rogue_planet = yes
								distance = {
									source = prev
									use_bypasses = yes
									min_jumps = 0
									max_jumps = 1000
								}
							}
							add_modifier = { modifier = rogue_target }
							save_event_target_as = rogue_event_planet
							set_planet_flag = rogue_target
						}
					}
					country_event = { id = fatherland_rogue.100 days = 3 random = 90 }
				}
				else = { kill_fatherland_heir = yes }
			}
		}
		else_if = {
			limit = { any_galaxy_planet = { is_valid_rogue_planet = yes } }
			random_galaxy_planet = {
				limit = { is_valid_rogue_planet = yes }
				add_modifier = { modifier = rogue_target }
				save_event_target_as = rogue_event_planet
				set_planet_flag = rogue_target
			}
			country_event = { id = fatherland_rogue.100 days = 3 random = 90 }
		}
		else = { kill_fatherland_heir = yes }
	}
}

kill_fatherland_heir = {
	event_target:disinherited_heir_fatherland = {
		set_leader_flag = dead_ruler
		kill_leader = { show_notification = no }
	}
}

